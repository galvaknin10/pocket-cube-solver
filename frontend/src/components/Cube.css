.cube-container {
  position: fixed; /* Ensures it stays in the viewport */
  top: 60%; /* Vertically center */
  left: 50%; /* Horizontally center */
  transform: translate(-50%, -50%); /* Adjusts position to truly center */
  width: 700px; /* Fixed container width */
  height: 700px; /* Fixed container height */
  background-color: #2e3a47;
   /* Light background */
  perspective: 800px; /* Adds depth to the 3D effect */
  display: flex;
  justify-content: center; /* Centers content horizontally */
  align-items: center; /* Centers content vertically */
}

/* When the user is interacting with the cube (dragging) */
.cube-container:active,
.cubie-face:active {
  cursor: grabbing;  /* Change cursor to grabbing when the user is dragging */
}

/* Default cursor when not dragging */
.cube-container,
.cubie-face {
  cursor: grab; /* Show 'grab' cursor when hovering over the cube or faces */
}

.cube {
  position: absolute; /* Position inside container */
  width: 100px; /* Cube width */
  height: 100px; /* Cube height */
  transform-style: preserve-3d;
  transform-origin: center center;
  transition: transform 0.1s ease-out;
}




.cubie {
  position: absolute;
  width: 44px;
  height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.3s ease-in-out;
}



/* Base arrow styles */
.rotation-arrow {
  position: absolute;
  top: 50%; 
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 4rem; /* Bigger for more visibility */
  color: rgb(0, 0, 0); /* Black color */
  z-index: 9999;
  animation: pulse 1s ease-in-out infinite alternate;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.5); /* Adds a glow effect */
  font-weight: bold;
  user-select: none; /* Prevent text selection */
}

/* Smooth scaling pulse animation */
@keyframes pulse {
  0% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.7;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 1;
  }
}

  
  Position arrows over each face
  .face-U .rotation-arrow { top: 20px; left: 50%; transform: translateX(-50%); }
  .face-D .rotation-arrow { bottom: 20px; left: 50%; transform: translateX(-50%); }
  .face-F .rotation-arrow { top: 50%; left: 50%; transform: translate(-50%, -50%); }
  .face-B .rotation-arrow { top: 50%; right: 20px; transform: translateY(-50%); }
  .face-L .rotation-arrow { top: 50%; left: 20px; transform: translateY(-50%); }
  .face-R .rotation-arrow { top: 50%; right: 20px; transform: translateY(-50%); }
  
  .success-message {
    position: fixed; /* Keeps the message in the same place even when scrolling */
    top: 85%; /* Set the vertical position to be a little lower (adjust percentage as needed) */
    left: 50%; /* Horizontally center the message */
    transform: translateX(-50%); /* Center the message */
    background-color: #4CAF50; /* Green background */
    color: white; /* White text */
    padding: 15px 30px; /* Some padding for the message */
    border-radius: 5px; /* Rounded corners */
    font-size: 18px; /* Font size */
    text-align: center; /* Center the text */
    z-index: 9999; /* Ensure it stays above other content */
  }
  
  

/* Container for buttons */
.button-container {
  position: fixed; /* Fixes the position of the buttons on the screen */
  top: 100px; /* Adjust the top position so buttons stay at the top */
  left: 50%; /* Horizontally center the buttons */
  transform: translateX(-50%); /* Centering adjustment */
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 20px; /* Spacing between buttons */
  margin-top: 20px;
  z-index: 10; /* Ensures buttons stay above the cube */
}

/* General button styling */
button {
  padding: 20px 20px; /* Fixed padding */
  font-size: 15px; /* Fixed font size */
  border: none;
  background-color: #007bff; /* Example background color */
  color: white; /* Text color */
  border-radius: 5px; /* Rounded corners */
  cursor: pointer;
}

button:hover {
  background-color: #45a049; /* Slightly darker green */
  transform: scale(1.05); /* Slight scale-up effect */
  cursor: pointer;
}

/* Add different colors for each button for distinction */
button.scramble {
  background-color: #ff9800; /* Orange */
}

button.scramble:hover {
  background-color: #fb8c00; /* Slightly darker orange */
}

button.find-solution {
  background-color: #2196F3; /* Blue */
}

button.find-solution:hover {
  background-color: #1976D2; /* Slightly darker blue */
}

button.guide-me {
  background-color: #9C27B0; /* Purple */
}

button.guide-me:hover {
  background-color: #7b1fa2; /* Slightly darker purple */
}

button:active {
  transform: scale(0.95); /* Shrinks the button slightly when clicked */
}




.unfolded-cube {
  display: grid;
  grid-template-columns: repeat(4, auto);
  grid-template-rows: repeat(3, auto);
  gap: 10px;
  justify-content: center;
  align-items: center;
}

/* Position each face in the net layout */
.face-B {
  grid-column: 2; /* second column */
  grid-row: 1;    /* first row */
}
.face-L {
  grid-column: 1;
  grid-row: 2;
}
.face-U {
  grid-column: 2;
  grid-row: 2;
}
.face-R {
  grid-column: 3;
  grid-row: 2;
}
.face-D {
  grid-column: 4;
  grid-row: 2;
}
.face-F {
  grid-column: 2;
  grid-row: 3;
}
.face-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 2px;
  width: 100%;  /* So it can fill .face */
  height: 100%;
}

.face {
  width: 150px;  /* Adjust as needed */
  height: 150px;
  border: 1px solid #000;
  background: #f4f4f4;
  margin: 0;
  padding: 0;   /* Remove padding so grid can fully expand */
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}


.sticker {
  position: relative; /* So the input can be positioned within it */
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  border: 5px solid #161515;
}



.color-input {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  cursor: grab;
}