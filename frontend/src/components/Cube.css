.cube-container {
  position: fixed; /* Ensures it stays in the viewport */
  top: 60%; /* Vertically center */
  left: 50%; /* Horizontally center */
  transform: translate(-50%, -50%); /* Adjusts position to truly center */
  width: 700px; /* Fixed container width */
  height: 700px; /* Fixed container height */
  /*background-color: #f0f0f0;
  /*background-image: url('https://i.pinimg.com/474x/ce/4b/af/ce4bafbce05156a8787a3036f13f9790.jpg');

   /* Light background */
  perspective: 800px; /* Adds depth to the 3D effect */
  display: flex;
  justify-content: center; /* Centers content horizontally */
  align-items: center; /* Centers content vertically */
}

button, h1 {
  -webkit-user-select: none; /* Safari */
  -moz-user-select: none;    /* Firefox */
  -ms-user-select: none;     /* Internet Explorer/Edge */
  user-select: none;         /* Standard syntax */
}


/* When the user is interacting with the cube (dragging) */
.cube-container:active,
.cubie-face:active {
  cursor: grabbing;  /* Change cursor to grabbing when the user is dragging */
}

/* Default cursor when not dragging */
.cube-container,
.cubie-face {
  cursor: grab; /* Show 'grab' cursor when hovering over the cube or faces */
}

.cube {
  position: absolute; /* Position inside container */
  width: 100px; /* Cube width */
  height: 100px; /* Cube height */
  transform-style: preserve-3d;
  transform-origin: center center;
  transition: transform 0.1s ease-out;
}




.cubie {
  position: absolute;
  width: 44px;
  height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  transform-style: preserve-3d;
  transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), background-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  will-change: transform, background-color, box-shadow;
  /* Optionally, add a slight 3D shadow effect for depth */

}



/* Base arrow styles */
.rotation-arrow {
  position: absolute;
  top: 50%; 
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 4rem; /* Bigger for more visibility */
  color: rgb(0, 0, 0); /* Black color */
  z-index: 9999;
  animation: pulse 1s ease-in-out infinite alternate;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.5); /* Adds a glow effect */
  font-weight: bold;
  user-select: none; /* Prevent text selection */
}

/* Smooth scaling pulse animation */
@keyframes pulse {
  0% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.7;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 1;
  }
}

  
  Position arrows over each face
  .face-U .rotation-arrow { top: 20px; left: 50%; transform: translateX(-50%); }
  .face-D .rotation-arrow { bottom: 20px; left: 50%; transform: translateX(-50%); }
  .face-F .rotation-arrow { top: 50%; left: 50%; transform: translate(-50%, -50%); }
  .face-B .rotation-arrow { top: 50%; right: 20px; transform: translateY(-50%); }
  .face-L .rotation-arrow { top: 50%; left: 20px; transform: translateY(-50%); }
  .face-R .rotation-arrow { top: 50%; right: 20px; transform: translateY(-50%); }
  

/* Base styles for all messages */
.message {
  position: fixed;
  top: 85%;
  left: 50%;
  transform: translateX(-50%);
  padding: 12px 25px;
  border-radius: 10px;
  font-size: 16px;
  font-weight: bold;
  text-align: center;
  z-index: 9999;
  max-width: 80%;
  opacity: 0.9;
  transition: opacity 0.3s ease;
  width: auto;
  background-color: #f0f0f5; /* Light background, Apple-like */
  color: #333; /* Dark text for high contrast */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
}

.guide-button {
  display: inline-block;
  padding: 0.5rem 1rem;
  font-size: 1rem;
  font-weight: bold;
  border-radius: 5px;
  background-color: #2196f3;
  color: white;
  cursor: pointer;
  text-transform: uppercase;
  text-decoration: none; /* Removes underline if any */
  margin-left: 10px;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.guide-button:hover {
  background-color: #1976d2; /* Darker blue when hovering */
  transform: translateY(-2px); /* Slight hover effect */
}

.guide-button:active {
  transform: translateY(0); /* Reset the hover effect on click */
}

/* Specific message types */
.error-message {
  background-color: #8b848c; /* Red for errors */
  color: white;
}

.notice-message {
  background-color: #8b848c; /* Orange for notices */
  color: white;
}

.solution-message {
  background-color: #8b848c; /* Green for solution */
  color: white;
}

.success-message {
  background-color: #8b848c; /* Blue for success */
  color: white;
}

.already-solved-message {
  background-color: #8b848c; /* Light green for already solved */
  color: white;
}

.no-solution-message {
  background-color: #8b848c; /* Deep orange for no solution */
  color: white;
}

.guiding-arrows-message {
  background-color: #8b848c; /* Purple for guiding arrows */
  color: white;
}

.restart-cube-message {
  background-color: #8b848c; /* Purple for guiding arrows */
  color: white;
}

.scramble-cube-message {
  background-color: #8b848c; /* Purple for guiding arrows */
  color: white;
}


  
  
/* Container for buttons */
.button-container {
  position: fixed;
  top: 160px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 50px;
  z-index: 10;
  padding: 0 10px; /* Optional, helps on smaller screens */
}

button {
  padding: 0.75rem 3rem;
  font-size: 1.5rem;
  font-weight: bold;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
  color: #fff;
  white-space: nowrap; /* Prevents text from wrapping onto multiple lines */
}


button:hover{
  transform: translateY(-3px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

/* Active state for button press feedback */
button:active {
  transform: translateY(0);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

/* Distinct button colors */

/* Scramble button - Orange */
button.scramble {
  background-color: #1f1f1e;
}
button.scramble:hover{
  background-color: #0c109e;
}

/* Reset button - Red */
button.reset {
  background-color: #1f1f1e;
}
button.reset:hover {
  background-color: #0c109e;
}

/* Find Solution button - Blue */
button.find-solution {
  background-color: #1f1f1e;
}
button.find-solution:hover{
  background-color: #0c109e;
}

/* Guide Me button - Purple */
button.guide-me {
  background-color: #1f1f1e;
}
button.guide-me:hover{
  background-color: #0c109e;
}

button.manual-color {
  background-color: #1f1f1e;
}
button.manual-color:hover {
  background-color: #0c109e;
}




.unfolded-cube {
  display: grid;
  grid-template-columns: repeat(4, auto);
  grid-template-rows: repeat(3, auto);
  gap: 8px;
  justify-content: center;
  align-items: center;
  margin-top: 120px; 
}

/* Position each face in the net layout */
.face-B {
  grid-column: 2; /* second column */
  grid-row: 1;    /* first row */
}
.face-L {
  grid-column: 1;
  grid-row: 2;
}
.face-U {
  grid-column: 2;
  grid-row: 2;
}
.face-R {
  grid-column: 3;
  grid-row: 2;
}
.face-D {
  grid-column: 4;
  grid-row: 2;
}
.face-F {
  grid-column: 2;
  grid-row: 3;
}

.face-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 2px;
  width: 100%;  /* So it can fill .face */
  height: 200%;
}

.face {
  width: 150px;  /* Adjust as needed */
  height: 150px;
  margin: 0;
  padding: 0;   /* Remove padding so grid can fully expand */
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}


.sticker {
  position: relative; /* So the input can be positioned within it */
  width: 100%;
  height: 100%;
  box-sizing: border-box;
}



