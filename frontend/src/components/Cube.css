/* 
  Cube Container
  - Centers the cube in the viewport
  - Sets a fixed size for the 3D display
  - Adds 3D perspective for cube rotation
*/
.cube-container {
  position: fixed; 
  top: 60%;
  left: 50%; 
  transform: translate(-50%, -50%); 
  width: 700px;
  height: 700px; 
  perspective: 800px; 
  display: flex;
  justify-content: center; 
  align-items: center;
}

/* Change cursor to grabbing when the user is dragging */
.cube-container:active,
.cubie-face:active {
  cursor: grabbing; 
}

/* Default cursor when not dragging */
.cube-container,
.cubie-face {
  cursor: grab; 
}

/* Prevent text selection on buttons and headers for cleaner UX */
button, h1, .message, .fun-fact-message, .spinner-overlay {
  user-select: none;    
}

/* Main 3D cube container */
.cube {
  position: absolute; 
  width: 100px;
  height: 100px; 
  transform-style: preserve-3d;
  transform-origin: center center;
  transition: transform 0.1s ease-out;
}

/* Individual mini-cube inside the full cube */
.cubie {
  position: absolute;
  width: 44px;
  height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  transform-style: preserve-3d;
  transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), background-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  will-change: transform, background-color, box-shadow;
}

/* Base arrows styles */
.rotation-arrow {
  position: absolute;
  top: 50%; 
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 4rem; 
  color: rgb(0, 0, 0); 
  z-index: 9999;
  animation: pulse 1s ease-in-out infinite alternate;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.5);
  font-weight: bold;
  user-select: none; 
}

/* Smooth scaling pulse animation */
@keyframes pulse {
  0% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.7;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 1;
  }
}

.message {
  position: fixed;
  bottom: 4%;             /* Use bottom for more consistent spacing */
  left: 50%;
  transform: translateX(-50%);
  padding: 16px 32px;
  border-radius: 16px;
  font-size: 1.08rem;
  font-weight: 600;
  text-align: center;
  z-index: 9999;
  max-width: 90vw;
  width: auto;
  opacity: 0.96;
  transition: opacity 0.3s, box-shadow 0.2s, transform 0.2s;

  background: linear-gradient(105deg, #5e81ac 60%, #c0cbe6 100%);
  color: #fff;
  box-shadow:
    0 8px 24px rgba(44, 62, 80, 0.12),
    0 0 10px 2px #63a4ff44;
  border: 2px solid #77aaff;
  letter-spacing: 0.02em;
}

.message:hover {
  opacity: 1;
  box-shadow:
    0 16px 36px rgba(44, 62, 80, 0.20),
    0 0 18px 4px #82b3fa99;
  transform: translateX(-50%) scale(1.03);
}

.fun-fact-message {
  position: fixed;
  top: 60%;
  left: 78%; /* move more to the right (was 72%) */
  transform: translate(-50%, -50%);

  background: linear-gradient(135deg, #dbeafe 0%, #fffbea 80%);
  color: #273c75;
  font-size: 1 rem;
  line-height: 1;
  padding: 20px 28px;
  border-radius: 16px;
  font-family: 'Fira Mono', 'Courier New', monospace;
  box-shadow:
    0 8px 24px rgba(44, 62, 80, 0.16),         /* normal shadow */
    0 0 16px 4px #63a4ff66,                    /* blue glow, outer */
    0 0 0 4px #8ecae633;                       /* soft frame glow */
  border: 2.5px solid #69a2ff;
  max-width: 340px;
  min-width: 220px;
  word-break: break-word;
  z-index: 9999;
  transition: box-shadow 0.2s, transform 0.2s;
}

.fun-fact-message:hover {
  box-shadow:
    0 12px 32px rgba(44, 62, 80, 0.24),
    0 0 28px 8px #63a4ffbb,
    0 0 0 6px #8ecae644;
  transform: translate(-50%, -54%) scale(1.04);
}

.fun-fact-message::before {
  content: '';
  display: block;
  position: absolute;
  left: 24px;
  top: -18px;
  width: 36px;
  height: 36px;
  background: url(../assets/gemini-color.svg) no-repeat center center / contain;
}




/* Container for buttons */
.button-container {
  position: fixed;
  top: 160px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 50px;
  z-index: 10;
  padding: 0 10px; 
}

button {
  padding: 0.65rem 2.6rem;
  font-size: 1.09rem;
  font-family: 'SF Pro Display', 'Segoe UI', 'Roboto', Arial, sans-serif;
  font-weight: 600;
  border-radius: 12px;
  border: 1.5px solid #dde6f3;
  background: linear-gradient(180deg, #f7fafd 0%, #c3d3ee 100%);
  color: #1c2541;
  box-shadow:
    0 1.5px 6px 0 #b5c5e0aa,
    0 0.5px 1.5px #fff6 inset;
  cursor: pointer;
  text-transform: uppercase;
  letter-spacing: 0.03em;
  transition:
    background 0.16s,
    color 0.16s,
    border-color 0.18s,
    box-shadow 0.17s,
    transform 0.13s;
  outline: none;
  white-space: nowrap;
  user-select: none;
}

button:hover {
  background: linear-gradient(180deg, #e7f0fc 0%, #b2c8e9 100%);
  border-color: #aac8ef;
  color: #1251b4;
  box-shadow:
    0 6px 24px 0 #b5c5e0cc,
    0 0.5px 2.5px #fff9 inset;
  transform: translateY(-2px) scale(1.03);
}

button:active {
  background: linear-gradient(180deg, #c3d3ee 0%, #e7f0fc 100%);
  border-color: #80a3c7;
  color: #0d3577;
  box-shadow:
    0 2px 8px 0 #b5c5e066,
    0 0.5px 1.5px #fff7 inset;
  transform: translateY(0) scale(0.99);
}


/* Styles the 2D unfolded cube layout (for manual color editing) */
.unfolded-cube {
  display: grid;
  grid-template-columns: repeat(4, auto);
  grid-template-rows: repeat(3, auto);
  gap: 8px;
  justify-content: center;
  align-items: center;
  margin-top: 120px; 
}

/* Position each face in the net layout */
.face-B {
  grid-column: 2; 
  grid-row: 1;    
}
.face-L {
  grid-column: 1;
  grid-row: 2;
}
.face-U {
  grid-column: 2;
  grid-row: 2;
}
.face-R {
  grid-column: 3;
  grid-row: 2;
}
.face-D {
  grid-column: 4;
  grid-row: 2;
}
.face-F {
  grid-column: 2;
  grid-row: 3;
}

/* Styles each individual 2x2 face of the unfolded cube */
.face-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 2px;
  width: 100%;  
  height: 200%;
}

/* Container for a full face (holds 4 stickers in a 2x2 grid) */
.face {
  width: 150px; 
  height: 150px;
  margin: 0;
  padding: 0;   
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}


/* Full-screen overlay for loading spinner 
   Appears centered with transparent background */
.spinner-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 140%;
  background: rgba(0,0,0,0.3);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center; /* This centers it vertically! */
  z-index: 10000;
  pointer-events: none; /* Let users click buttons underneath */
}

.spinner {
  pointer-events: auto;
  display: inline-block;
  width: 80px;
  height: 60px;
  margin-bottom: 90px;
}

.spinner::after {
  content: " ";
  display: block;
  width: 50px;
  height: 52px;
  margin: 4px;
  border-radius: 50%;
  border: 9px solid transparent;
  border-top-color: #0066ff;     /* Vivid blue */
  border-right-color: #ff1f1f;   /* Strong red */
  animation: spin 0.8s ease-in-out infinite;
}

@keyframes spin {
  0%   { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}



.spinner-text {
  font-size: 25px;
  font-weight: 500;
  color: #ffffff;
  margin-top: 100px;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
}

/* Transparent overlay to lock cube interaction
   Prevents user actions while maintaining layout */
.cube-lock-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 5; /* must be above cube */
  background: transparent;
  cursor: not-allowed;
}



@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}